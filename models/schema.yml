
version: 2

# Most testing will be done immediately with incoming data to ensure later joins. Most important is PK, FK, BR.
sources:
  - name: raw
    database: silverscreen
    schema: raw
    tables:
      - name: invoices
        description: Holds invoices for renting movies from movie distributions. These invoices represent our costs for showing the movies.
        columns:
          - name: movie_id
            description: Foreign key identifying the movie been rented. Primary key in movies table.
            tests:
              - not_null
              - relationships:
                  arguments:
                    field: movie_id
                    to: source('raw','movies')
          - name: invoice_id
            description: Identifier of invoice for renting a movie from distributor.
          - name: invoice_date
            description: Date when invoice was been issued. One of three keys to connect with sales figures.
            tests:
              - not_null
              # relationship will be tested later, as date format of related tables needs transformations.
          - name: cinema_id
            description: Identifies the movie theatre which rented the movie.
            tests:
              - not_null
              - accepted_values:
                  arguments:
                    values:
                      - 'NJ_001'
                      - 'NJ_002'
                      - 'NJ_003'
          - name: movie_studio
            description: Name of the movie studio which produced the movie.
          - name: movie_release_date
            description: Official release date of movie. Not always similar to date we show the movies.
          - name: invoice_sum
            description: Rental costs in USD for a specific movie for a specific cienma per given month.
            tests:
              - not_null
              - not_negative
          - name: load_timestamp
            description: Date and time of dataload from stage to raw.
      - name: movies
        description: Holds qualitative information about movies, like title, director and more. Dimensional table.
        columns:
          - name: movie_id
            description: Primary Key. Identifies the movie. Needs to be unique. Used as foreign key in all other tables.
            tests:
              - not_null
              - unique
              - relationships:
                  arguments:
                    field: movie_id
                    to: source('raw', 'invoices')
              - relationships:
                  arguments:
                    field: movie_id
                    to: source('raw', 'sales_cinema_01')
              - relationships:
                  arguments:
                    field: movie_id
                    to: source('raw', 'sales_cinema_02')
              - relationships:
                  arguments:
                    field: movie_id
                    to: source('raw', 'sales_cinema_03')
          - name: movie_title
            description: Title of the movie.
          - name: movie_release_date
            description: Release date of the movie.
          - name: genre
            description: Genre of the movie.
          - name: country
            description: Country location of movie studio which produced the movie.
          - name: studio
            description: Name of movie studio which produced that movie.
          - name: budget
            description: Budget which was spent for movie production.
          - name: director
            description: Director who was producing the movie.
          - name: pg_rating
            description: PG rating of the movie.
          - name: movie_length_min
            description: Lenght of movie in minues.
          - name: load_timestamp
            description: Date and time when data was loaded.
      - name: sales_cinema_01
        description: Shows movie ticket sales figures from a specific movie theatre over time. 
        columns:
          - name: day
            description: Date which corresponds to the recorded tickets sales. 
            tests:
              - not_null
              - not_earlier_than_threshold_date
          - name: movie_id
            description: Foreign key. Identifies the shown movie. Related to primary key in table movies.
            tests:
              - not_null
              - relationships:
                  arguments:
                    field: movie_id
                    to: source('raw','movies')
          - name: tickets_sold
            description: Number of tickets sold for that movie in that cinema on given day.
            tests:
              - not_null
              - not_negative
          - name: total_revenue
            description: Revenue in USD by tickets sold for that movie in that cinema on given day.
            tests:
              - not_null
              - not_negative
          - name: cinema_id
            description: Part of primary key of this table clearly identifying the movie theatre where the film was shown.
            tests:
              - not_null
              - accepted_values:
                  arguments:
                    values: [1,2,3]
          - name: load_timestamp
            description: Date and time when the raw data was loaded.
      - name: sales_cinema_02
        description: Shows movie ticket sales figures from a specific movie theatre over time.  
        columns:
          - name: day
            description: Date which corresponds to the recorded tickets sales. 
            tests:
              - not_null
              - not_earlier_than_threshold_date
          - name: movie_id
            description: Foreign key. Identifies the shown movie. Related to primary key in table movies.
            tests:
              - not_null
              - relationships:
                  arguments:
                    field: movie_id
                    to: source('raw','movies')
          - name: tickets_sold
            description: Number of tickets sold for that movie in that cinema on given day.
            tests:
              - not_null
              - not_negative
          - name: total_revenue
            description: Revenue in USD by tickets sold for that movie in that cinema on given day.
            tests:
              - not_null
              - not_negative
          - name: cinema_id
            description: Part of primary key of this table clearly identifying the movie theatre where the film was shown.
            tests:
              - not_null
              - accepted_values:
                  arguments:
                    values: [1,2,3]
          - name: load_timestamp
            description: Date and time when the raw data was loaded.
      - name: sales_cinema_03
        description: Shows movie ticket sales figures from a specific movie theatre over time. 
        columns:
          - name: month
            description: Month which corresponds to the recorded tickets sales. 
            tests:
              - not_null
              - not_earlier_than_threshold_date
          - name: movie_id
            description: Foreign key. Identifies the shown movie. Related to primary key in table movies.
            tests:
              - not_null:
                  config:
                    where: "product_type = 'tickets'"
              - relationships:
                  config:
                    where: "product_type = 'ticket'"  
                  arguments:
                    field: movie_id
                    to: source('raw','movies')
          - name: tickets_sold
            description: Number of tickets sold for that movie in that cinema on given day.
            tests:
              - not_null
              - not_negative
          - name: total_revenue
            description: Revenue in USD by tickets sold for that movie in that cinema on given day.
            tests:
              - not_null
              - not_negative
          - name: cinema_id
            description: Part of primary key of this table clearly identifying the movie theatre where the film was shown.
            tests:
              - not_null
              - accepted_values:
                  arguments:
                    values: [1,2,3]
          - name: load_timestamp
            description: Date and time when the raw data was loaded.
  
models:
# For staging models description is reduced as column names are self explanatory
# Also testing will be a minimum as we have done initial testing for sources and no major transformations.

  - name: stg_movie_catalog
    description: Holds descriptive and qualitative movie information about directors, length, release date and more.
  - name: stg_invoices
    description: Holds movie rental costs in form of individual invoices for a movie for a given time for a specific movie theatre.
  - name: stg_sales_cinema_01
    description: Holds sales figures of movie theatre 1
    columns:
      - name: month
        description: Year and month of movie tickets sold.
      - name: movie_id
        description: Foreign key, primary key of movie. 
      - name: tickets_sold
        description: Total tickets sold for this movie this month in this theatre.
      - name: total_revenue
        description: Total revenue in USD for tickets sold for this movie this month this theatre.
      - name: cinema_id
        description: ID of movie theatre of silverscreen where movie is been shown.
        tests:
          - not_null
          - accepted_values:
              arguments:
                values: [1, 2, 3]
      - name: load_timestamp
        description: Timestamp when data has been loaded
  - name: stg_sales_cinema_02
    description: Similar to stg_sales_cinema_01 but for movie theatre 2.
    columns:
      - name: cinema_id
        tests:
          - not_null
          - accepted_values:
              arguments:
                values: [1,2,3]
  - name: stg_sales_cinema_03
    description: Similar to stg_sales_cinema_01 but for movie theatre 3.
    columns:
      - name: cinema_id
        tests:
          - not_null
          - accepted_values:
              arguments:
                values: [1, 2, 3]

# For intermedia models description is reduced as column names are self explanatory
# For intermedia models testing will be a minimum as we have done full testing for sources 
#   and we do not have very complex aggregation or calculations or joins.
  - name: int_sales_cinema_01_aggregate_on_month
    description: Aggregates sales figures for cinema on monthly level. Previously was daily.
  - name: int_sales_cinema_02_aggregate_on_month
    description: Aggregates sales figures for cinema on monthly level. Previously was daily.
  - name: int_movie_sales
    description: Movie sales figures of all movie theatres united. Figures are aggregated on monthly level.
  - name: int_movie_rental_costs
    description: Holds rental costs for specific movies in various cinemas aggregated per month. 

# Consumer / marts models
  - name: mrt_movies_financial_performance
    description: Holds final reporting facts and dimensions about movies shown in one of our movies. Data is aggregated on monthly level. Holds information about movie, cinema, month, rental costs, revenue and number of sold tickets. As well many qualitative information about the movie itself which can be used for analytical purposes.
    columns:
      - name: movie_title
        description: Title of shown movie.
        tests:
          - not_null
      - name: movie_genre
        description: Genre of shown movie.
      - name: movie_studio
        description: Name of studio which has produced the movie.
      - name: movie_budget_category
        description: Budget spend for production of movie. Three categories. Small (<100 Mio USD), Medium (100-200 Mio USD), Large (>200 Mio USD).
      - name: movie_director
        description: Name of director of movie.
      - name: movie_pg_rating
        description: PG (parental guidance) rating of movie.
      - name: movie_length_min
        description: Lenght of movie in minutes.
      - name: movie_rental_costs
        description: Rental costs silver screen had to spend for that movie. Aggregated on months and cinemas for every movie.
        tests:
          - not_null
          - not_negative
      - name: month
        description: Year and month in which the movie was shown and the figures relate to that month.
        tests:
          - not_null
          - not_earlier_than_threshold_date
      - name: cinema_id
        description: Identifies the movie theatre where the movie was shown.
        tests:
          - not_null
          - accepted_values:
              arguments:
                values: [1,2,3]
      - name: sum_tickets_sold
        description: Number of tickets sold for that movie in that month in the movie theatre.
        tests:
          - not_null
          - not_negative
      - name: sum_total_revenue
        description: Total revenue in USD generated by ticket sales for that movie in that cinema in given month.